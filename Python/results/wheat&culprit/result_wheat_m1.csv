filename,Has wheat?Ê,num of lines of wheat,num of mutations to find wheat,line numbers of wheat,wheats,,,,,,,,
Clone9.py,No wheat,0,127,,,,,,,,,,
Clone158.py,No wheat,0,511,,,,,,,,,,
Clone389.py,Has necessary and sufficient wheat,4,49,0_2_3_5_,"def __getitem__(self, key) :
","		temp = int(key)
","		return ""I am a number""
","		return self.get(key, None)
",,,,,
Clone109.py,Has necessary and sufficient wheat,3,16,0_1_2_,"def Compare(left, ops, comparators) :
","	for x, op, y in zip([left] + comparators [: - 1], ops, comparators) :
","		if not op(x, y) :
",,,,,,
Clone574.py,No wheat,0,31,,,,,,,,,,
Clone525.py,No wheat,0,31,,,,,,,,,,
Clone465.py,No wheat,0,511,,,,,,,,,,
Clone707.py,Has necessary and sufficient wheat,1,1,0_,"def readParag(fileObj) :
",,,,,,,,
Clone804.py,No wheat,0,63,,,,,,,,,,
Clone587.py,Has necessary and sufficient wheat,5,61,0_2_3_4_5_,"def reverse(s) :
","	t = ''
","	while len(rev) ! = 0 :
","		t += rev.pop()
","	return t
",,,,
Clone756.py,No wheat,0,31,,,,,,,,,,
Clone451.py,No wheat,0,15,,,,,,,,,,
Clone680.py,No wheat,0,127,,,,,,,,,,
Clone983.py,Has necessary and sufficient wheat,2,7,0_2_,"def fileCount(path, extension) :
","	for root, dirs, files in os.walk(path) :
",,,,,,,
Clone791.py,Has necessary and sufficient wheat,4,182,0_1_2_9_,"def __setattr__(self, a, v) :
","	propobj = getattr(self.__class__, a, None)
","	if isinstance(propobj, property) :
","		super(Test, self).__setattr__(a, v)
",,,,,
Clone540.py,Has necessary and sufficient wheat,2,6,0_1_,"def touch(fname) :
","	if os.path.exists(fname) :
",,,,,,,
Clone622.py,No wheat,0,127,,,,,,,,,,
Clone820.py,No wheat,0,127,,,,,,,,,,
Clone871.py,Has necessary and sufficient wheat,5,163,0_1_2_3_4_,"def sublist(a, b) :
","	last = 0
","	for el_a in a :
","		if el_a in b [last :] :
","			last = b [last :].index(el_a)
",,,,
Clone781.py,No wheat,0,255,,,,,,,,,,
Clone410.py,No wheat,0,63,,,,,,,,,,
Clone690.py,No wheat,0,31,,,,,,,,,,
Clone606.py,No wheat,0,255,,,,,,,,,,
Clone486.py,No wheat,0,127,,,,,,,,,,
Clone424.py,No wheat,0,1023,,,,,,,,,,
Clone148.py,No wheat,0,31,,,,,,,,,,
Clone139.py,No wheat,0,15,,,,,,,,,,
Clone795.py,Has necessary and sufficient wheat,3,46,0_1_2_,"def encrypt(key, plaintext) :
","	padded_key = key.ljust(KEY_SIZE, '\0')
","	padded_text = plaintext + (BLOCK_SIZE - len(plaintext) % BLOCK_SIZE) * '\0'
",,,,,,
Clone896.py,No wheat,0,255,,,,,,,,,,
Clone515.py,Has necessary and sufficient wheat,1,1,0_,"def func() :
",,,,,,,,
Clone834.py,No wheat,0,1023,,,,,,,,,,
Clone677.py,No wheat,0,63,,,,,,,,,,
Clone974.py,No wheat,0,127,,,,,,,,,,
Clone865.py,No wheat,0,31,,,,,,,,,,
Clone521.py,No wheat,0,63,,,,,,,,,,
Clone461.py,No wheat,0,127,,,,,,,,,,
Clone583.py,No wheat,0,127,,,,,,,,,,
Clone851.py,No wheat,0,31,,,,,,,,,,
Clone752.py,Has necessary and sufficient wheat,9,1017,0_1_2_3_4_6_7_8_9_,"def fib(n) :
","	if n == 2 :
","		try :
","			fib.two_count += 1
","		except AttributeError :
","	if n == 0 or n == 1 :
","		return n
","	else :
","		return fib(n - 1) + fib(n - 2)
"
Clone800.py,No wheat,0,511,,,,,,,,,,
Clone492.py,No wheat,0,63,,,,,,,,,,
Clone713.py,Has necessary and sufficient wheat,7,478,0_1_2_4_5_7_8_,"def Max(s) :
","	if len(s) == 1 :
","		return s [0]
","		m = Max(s [1 :])
","		if m > s [0] :
","		else :
","			return s [0]
",,
Clone653.py,No wheat,0,63,,,,,,,,,,
Clone841.py,No wheat,0,255,,,,,,,,,,
Clone593.py,No wheat,0,31,,,,,,,,,,
Clone901.py,No wheat,0,31,,,,,,,,,,
Clone420.py,No wheat,0,1023,,,,,,,,,,
Clone19.py,No wheat,0,31,,,,,,,,,,
Clone875.py,Has necessary and sufficient wheat,6,642,0_1_2_3_4_9_,"def sublist(a, b) :
","	seq = iter(b)
","	try :
","		for x in a :
","			while next(seq) ! = x : pass
","	return False
",,,
Clone667.py,No wheat,0,511,,,,,,,,,,
Clone964.py,No wheat,0,63,,,,,,,,,,
Clone997.py,No wheat,0,63,,,,,,,,,,
Clone505.py,Has necessary and sufficient wheat,1,3,2_,"	for stdout_line in iter(popen.stdout.readline, """") :
",,,,,,,,
Clone445.py,No wheat,0,31,,,,,,,,,,
Clone414.py,No wheat,0,63,,,,,,,,,,
Clone169.py,No wheat,0,511,,,,,,,,,,
Clone138.py,No wheat,0,15,,,,,,,,,,
Clone405.py,No wheat,0,31,,,,,,,,,,
Clone454.py,No wheat,0,127,,,,,,,,,,
Clone986.py,No wheat,0,255,,,,,,,,,,
Clone767.py,No wheat,0,511,,,,,,,,,,
Clone864.py,No wheat,0,31,,,,,,,,,,
Clone520.py,No wheat,0,31,,,,,,,,,,
Clone571.py,No wheat,0,31,,,,,,,,,,
Clone582.py,No wheat,0,127,,,,,,,,,,
Clone582.py,No wheat,0,127,,,,,,,,,,
Clone493.py,No wheat,0,127,,,,,,,,,,
Clone712.py,No wheat,0,1023,,,,,,,,,,
Clone483.py,No wheat,0,511,,,,,,,,,,
Clone743.py,Has necessary and sufficient wheat,8,980,0_1_2_3_5_6_8_9_,"def translate_non_alphanumerics(to_translate, translate_to = u'_') :
","	not_letters_or_digits = u'!""#%\'()*+,-./:;<=>?@[\]^_`{|}~'
","	if isinstance(to_translate, unicode) :
","		translate_table = dict((ord(char), unicode(translate_to)) for char in not_letters_or_digits)
","		assert isinstance(to_translate, str)
","		translate_table = string.maketrans(not_letters_or_digits,
","		* len(not_letters_or_digits))
","	return to_translate.translate(translate_table)
",
Clone603.py,No wheat,0,31,,,,,,,,,,
Clone421.py,No wheat,0,1023,,,,,,,,,,
Clone470.py,No wheat,0,511,,,,,,,,,,
Clone934.py,No wheat,0,255,,,,,,,,,,
Clone965.py,No wheat,0,511,,,,,,,,,,
Clone825.py,No wheat,0,255,,,,,,,,,,
Clone996.py,No wheat,0,127,,,,,,,,,,
Clone555.py,No wheat,0,511,,,,,,,,,,
Clone415.py,No wheat,0,7,,,,,,,,,,
Clone575.py,No wheat,0,31,,,,,,,,,,
Clone524.py,No wheat,0,31,,,,,,,,,,
Clone464.py,No wheat,0,1023,,,,,,,,,,
Clone706.py,No wheat,0,127,,,,,,,,,,
Clone586.py,No wheat,0,127,,,,,,,,,,
Clone854.py,Has necessary and sufficient wheat,3,20,0_2_4_,"def fib(a = 0, b = 1) :
","	while True :
","		a, b = b, a + b
",,,,,,
Clone450.py,No wheat,0,15,,,,,,,,,,
Clone982.py,Has necessary and sufficient wheat,2,7,0_2_,"def fileCount(path, extension) :
","	for root, dirs, files in os.walk(path) :
",,,,,,,
Clone790.py,No wheat,0,127,,,,,,,,,,
Clone763.py,No wheat,0,511,,,,,,,,,,
Clone920.py,Has necessary and sufficient wheat,3,17,0_1_3_,"def sameSet(list1, list2) :
","	if contained(list1, list2) and contained(list2, list1) :
","	else :
",,,,,,
Clone831.py,No wheat,0,31,,,,,,,,,,
Clone732.py,No wheat,0,511,,,,,,,,,,
Clone672.py,No wheat,0,127,,,,,,,,,,
Clone971.py,No wheat,0,63,,,,,,,,,,
Clone821.py,No wheat,0,511,,,,,,,,,,
Clone930.py,No wheat,0,31,,,,,,,,,,
Clone870.py,No wheat,0,255,,,,,,,,,,
Clone773.py,No wheat,0,63,,,,,,,,,,
Clone691.py,No wheat,0,31,,,,,,,,,,
Clone844.py,No wheat,0,127,,,,,,,,,,
Clone425.py,No wheat,0,63,,,,,,,,,,
Clone565.py,Has necessary and sufficient wheat,1,2,1_,"	for length in range(min_length, max_length + 1) :
",,,,,,,,
Clone91.py,No wheat,0,31,,,,,,,,,,
Clone679.py,Has necessary and sufficient wheat,6,234,0_2_3_4_5_6_,"def two_pair(ranks) :
","	for i in set(ranks) :
","		if ranks.count(i) == 2 :
","			newlist.append(i)
","	newlist.sort(reverse = True)
","	newlist = tuple(newlist)
",,,
Clone344.py,Has necessary and sufficient wheat,1,1,0_,"def get_or_create(session, model, ** kwargs) :
",,,,,,,,
Clone204.py,No wheat,0,1023,,,,,,,,,,
Clone166.py,No wheat,0,63,,,,,,,,,,
Clone230.py,No wheat,0,511,,,,,,,,,,
Clone370.py,No wheat,0,63,,,,,,,,,,
Clone152.py,No wheat,0,255,,,,,,,,,,
Clone383.py,Has necessary and sufficient wheat,4,106,0_1_5_7_,"def merge_dicts(d1, d2) :
","	try :
","	if any(d1 [shared] ! = d2 [shared] for shared in intersection) :
","	return dict(d1, ** d2)
",,,,,
Clone292.py,No wheat,0,127,,,,,,,,,,
Clone103.py,No wheat,0,63,,,,,,,,,,
Clone393.py,No wheat,0,255,,,,,,,,,,
Clone360.py,No wheat,0,63,,,,,,,,,,
Clone331.py,No wheat,0,255,,,,,,,,,,
Clone271.py,No wheat,0,31,,,,,,,,,,
Clone305.py,No wheat,0,127,,,,,,,,,,
Clone214.py,No wheat,0,1023,,,,,,,,,,
Clone888.py,No wheat,0,127,,,,,,,,,,
Clone669.py,No wheat,0,127,,,,,,,,,,
Clone52.py,No wheat,0,127,,,,,,,,,,
Clone37.py,Has necessary and sufficient wheat,8,507,0_1_2_4_5_6_7_8_,"def num_subsequences(seq, sub) :
","	if not sub :
","		return 1
","		return 0
","	result = num_subsequences(seq [1 :], sub)
","	if seq [0] == sub [0] :
","		result += num_subsequences(seq [1 :], sub [1 :])
","	return result
",
Clone66.py,Has necessary and sufficient wheat,4,43,0_1_2_4_,"def is_sorted(lst) :
","	try :
","		sorted(lst, cmp = my_cmp)
","	except ValueError :
",,,,,
Clone709.py,No wheat,0,63,,,,,,,,,,
Clone95.py,Has necessary and sufficient wheat,1,4,3_,"		for fd, ev in events :
",,,,,,,,
Clone374.py,Has necessary and sufficient wheat,1,2,1_,"	res = False
",,,,,,,,
Clone133.py,Has necessary and sufficient wheat,7,868,0_1_2_4_5_6_7_,"def find_nth(haystack, needle, n = 1) :
","	if (hasattr(needle, 'finditer')) :
","		matches = needle.finditer(haystack)
","		matches = re.finditer(re.escape(needle), haystack)
","	start_here = itertools.dropwhile(lambda x : x [0] < n, enumerate(matches, 1))
","	try :
","		return next(start_here) [1].start()
",,
Clone123.py,No wheat,0,63,,,,,,,,,,
Clone172.py,Has necessary and sufficient wheat,2,35,3_4_,"	with open(path) as f :
","		for line in f :
",,,,,,,
Clone350.py,No wheat,0,31,,,,,,,,,,
Clone241.py,No wheat,0,1023,,,,,,,,,,
Clone146.py,Has necessary and sufficient wheat,6,220,0_1_2_3_4_6_,"def contains(small, big) :
","	for i in xrange(len(big) - len(small) + 1) :
","		for j in xrange(len(small)) :
","			if big [i + j] ! = small [j] :
","				break
","			return i, i + len(small)
",,,
Clone286.py,No wheat,0,31,,,,,,,,,,
Clone117.py,No wheat,0,31,,,,,,,,,,
Clone335.py,No wheat,0,1023,,,,,,,,,,
Clone364.py,No wheat,0,63,,,,,,,,,,
Clone659.py,No wheat,0,63,,,,,,,,,,
Clone76.py,Has necessary and sufficient wheat,3,24,1_3_4_,"	while True :
","		time.sleep(1)
","		self.results_q.put(""text"")
",,,,,,
Clone748.py,No wheat,0,127,,,,,,,,,,
Clone53.py,No wheat,0,63,,,,,,,,,,
Clone759.py,Has necessary and sufficient wheat,2,11,1_3_,"	if self.value() :
","	elif not self.value() :
",,,,,,,
Clone67.py,No wheat,0,255,,,,,,,,,,
Clone708.py,Has necessary and sufficient wheat,4,43,0_1_2_4_,"def square(x = None) :
","	try :
","		return float(x) ** 2
","		print ""You did not enter a real number""
",,,,,
Clone94.py,Has necessary and sufficient wheat,1,4,3_,"		w = ord(msg [i]) + (ord(msg [i + 1]) < < 8)
",,,,,,,,
Clone235.py,No wheat,0,127,,,,,,,,,,
Clone106.py,Has necessary and sufficient wheat,8,976,0_1_2_3_4_6_8_9_,"def is_less(a, b) :
","	i = 0
","	while i < len(a) :
","		if a [i] < b [i] :
","			return True
","			if a [i] > b [i] :
","		i += 1
","	return False
",
Clone6.py,No wheat,0,255,,,,,,,,,,
Clone132.py,No wheat,0,31,,,,,,,,,,
Clone351.py,No wheat,0,31,,,,,,,,,,
Clone396.py,No wheat,0,127,,,,,,,,,,
Clone147.py,No wheat,0,31,,,,,,,,,,
Clone287.py,No wheat,0,511,,,,,,,,,,
Clone749.py,No wheat,0,127,,,,,,,,,,
Clone738.py,Has necessary and sufficient wheat,2,12,1_4_,"	if hasattr(user, ""name"") :
","		self.remove(user)
",,,,,,,
Clone678.py,No wheat,0,63,,,,,,,,,,
Clone194.py,No wheat,0,127,,,,,,,,,,
Clone314.py,No wheat,0,63,,,,,,,,,,
Clone371.py,Has necessary and sufficient wheat,3,44,0_2_4_,"def mkdir_p(path) :
","		os.makedirs(path)
","		if exc.errno == errno.EEXIST and os.path.isdir(path) :
",,,,,,
Clone382.py,No wheat,0,255,,,,,,,,,,
Clone102.py,No wheat,0,127,,,,,,,,,,
Clone392.py,No wheat,0,127,,,,,,,,,,
Clone361.py,No wheat,0,63,,,,,,,,,,
Clone270.py,No wheat,0,31,,,,,,,,,,
Clone889.py,No wheat,0,127,,,,,,,,,,
Clone639.py,No wheat,0,1023,,,,,,,,,,
Clone16.py,No wheat,0,31,,,,,,,,,,
Clone779.py,Has necessary and sufficient wheat,4,27,0_1_2_4_,"def check_names(part_names, full_name_list) :
","	for full_name in full_name_list :
","		for part_name in part_names :
","				yield full_name
",,,,,
Clone578.py,No wheat,0,31,,,,,,,,,,
Clone808.py,No wheat,0,127,,,,,,,,,,
Clone919.py,No wheat,0,31,,,,,,,,,,
Clone294.py,No wheat,0,127,,,,,,,,,,
Clone131.py,No wheat,0,31,,,,,,,,,,
Clone160.py,No wheat,0,63,,,,,,,,,,
Clone202.py,No wheat,0,255,,,,,,,,,,
Clone313.py,Has necessary and sufficient wheat,7,875,0_1_2_4_6_7_9_,"def encrypt(plain) :
","	fs = [pycipher.Affine(3, 0).encipher,
","	pycipher.Affine(7, 6).encipher]
","	d = dict()
","		f = fs [is_even]
","		d [ch] = f(ch)
","	return ''.join([d [ch] for ch in plain])
",,
Clone212.py,No wheat,0,31,,,,,,,,,,
Clone337.py,No wheat,0,255,,,,,,,,,,
Clone284.py,No wheat,0,255,,,,,,,,,,
Clone818.py,Has necessary and sufficient wheat,3,39,0_1_4_,"def setup(self) :
","	import os.path as op
","		raise AssertionError(""Oops! ""
",,,,,,
Clone958.py,Has necessary and sufficient wheat,3,28,0_2_5_,"def md5sum(filename) :
","		d = hashlib.md5()
","	return d.hexdigest()
",,,,,,
Clone74.py,Has necessary and sufficient wheat,6,123,0_1_2_4_5_6_,"def flatten(container) :
","	for i in container :
","		if isinstance(i, (list, tuple)) :
","				yield j
","		else :
","			yield i
",,,
Clone87.py,Has necessary and sufficient wheat,1,5,4_,"		return super(self, o)
",,,,,,,,
Clone568.py,No wheat,0,31,,,,,,,,,,
Clone11.py,No wheat,0,127,,,,,,,,,,
Clone93.py,Has necessary and sufficient wheat,2,13,1_3_,"	s = 0
","		w = ord(msg [i]) + (ord(msg [i + 1]) < < 8)
",,,,,,,
Clone799.py,No wheat,0,511,,,,,,,,,,
Clone408.py,No wheat,0,63,,,,,,,,,,
Clone459.py,No wheat,0,63,,,,,,,,,,
Clone519.py,No wheat,0,31,,,,,,,,,,
Clone838.py,No wheat,0,255,,,,,,,,,,
Clone54.py,No wheat,0,31,,,,,,,,,,
Clone869.py,No wheat,0,511,,,,,,,,,,
Clone135.py,No wheat,0,63,,,,,,,,,,
Clone317.py,No wheat,0,255,,,,,,,,,,
Clone206.py,No wheat,0,511,,,,,,,,,,
Clone197.py,No wheat,0,1,,,,,,,,,,
Clone290.py,Has necessary and sufficient wheat,3,57,0_6_7_,"def formatTime(self, record, datefmt = None) :
","		s = ""%s.%03d"" % (t, record.msecs)
","	return s
",,,,,,
Clone101.py,No wheat,0,127,,,,,,,,,,
Clone381.py,No wheat,0,255,,,,,,,,,,
Clone372.py,Has necessary and sufficient wheat,3,44,0_2_4_,"def mkdir_p(path) :
","		os.makedirs(path)
","		if exc.errno == errno.EEXIST and os.path.isdir(path) :
",,,,,,
Clone362.py,No wheat,0,63,,,,,,,,,,
Clone391.py,No wheat,0,127,,,,,,,,,,
Clone216.py,No wheat,0,15,,,,,,,,,,
Clone307.py,No wheat,0,127,,,,,,,,,,
Clone15.py,No wheat,0,1023,,,,,,,,,,
Clone939.py,No wheat,0,511,,,,,,,,,,
Clone558.py,No wheat,0,31,,,,,,,,,,
Clone789.py,No wheat,0,63,,,,,,,,,,
Clone83.py,No wheat,0,31,,,,,,,,,,
Clone409.py,No wheat,0,63,,,,,,,,,,
Clone798.py,No wheat,0,255,,,,,,,,,,
Clone518.py,No wheat,0,63,,,,,,,,,,
Clone839.py,No wheat,0,127,,,,,,,,,,
Clone979.py,No wheat,0,31,,,,,,,,,,
Clone868.py,No wheat,0,31,,,,,,,,,,
Clone165.py,No wheat,0,3,,,,,,,,,,
Clone134.py,Has necessary and sufficient wheat,7,872,0_1_2_4_5_7_9_,"def find_nth(haystack, needle, n = 1) :
","	if (hasattr(needle, 'finditer')) :
","		matches = needle.finditer(haystack)
","		matches = re.finditer(re.escape(needle), haystack)
","	start_here = itertools.dropwhile(lambda x : x [0] < n, enumerate(matches, 1))
","		return next(start_here) [1].start()
","		return - 1
",,
Clone291.py,No wheat,0,31,,,,,,,,,,
Clone380.py,No wheat,0,127,,,,,,,,,,
Clone233.py,No wheat,0,127,,,,,,,,,,
Clone363.py,No wheat,0,63,,,,,,,,,,
Clone141.py,No wheat,0,63,,,,,,,,,,
Clone217.py,No wheat,0,31,,,,,,,,,,
Clone306.py,No wheat,0,127,,,,,,,,,,
Clone938.py,No wheat,0,63,,,,,,,,,,
Clone14.py,No wheat,0,1023,,,,,,,,,,
Clone829.py,Has necessary and sufficient wheat,6,234,0_2_3_4_5_6_,"def breakdown(a) :
","	q = len(a)
","	while q > 0 :
","		y += [list(a)]
","		a.pop()
","		q -= 1
",,,
Clone508.py,No wheat,0,31,,,,,,,,,,
Clone448.py,Has necessary and sufficient wheat,3,38,0_3_4_,"def update(self, instance, validated_data) :
","	user_serializer.is_valid(raise_exception = True)
","	user_serializer.update(instance.user, user_data)
",,,,,,
Clone559.py,No wheat,0,31,,,,,,,,,,
Clone788.py,No wheat,0,255,,,,,,,,,,
Clone20.py,No wheat,0,31,,,,,,,,,,
Clone51.py,No wheat,0,127,,,,,,,,,,
Clone579.py,No wheat,0,511,,,,,,,,,,
Clone96.py,No wheat,0,63,,,,,,,,,,
Clone130.py,No wheat,0,511,,,,,,,,,,
Clone161.py,Has necessary and sufficient wheat,2,13,0_6_,"def parse(self, response) :
","		}
",,,,,,,
Clone203.py,No wheat,0,255,,,,,,,,,,
Clone242.py,No wheat,0,127,,,,,,,,,,
Clone213.py,No wheat,0,31,,,,,,,,,,
Clone336.py,No wheat,0,511,,,,,,,,,,
Clone819.py,Has necessary and sufficient wheat,3,66,1_3_7_,"	import os.path as op
","	if not os.access(self.fixture_dir, os.F_OK) :
","	assert os.access(csvfile, os.F_OK)
",,,,,,
Clone959.py,Has necessary and sufficient wheat,4,28,0_1_3_4_,"def md5sum(filename) :
","	d = hashlib.md5()
","		d.update(buf)
","	return d.hexdigest()
",,,,,
Clone86.py,No wheat,0,255,,,,,,,,,,
Clone569.py,No wheat,0,31,,,,,,,,,,
Clone10.py,No wheat,0,127,,,,,,,,,,
Clone208.py,Has necessary and sufficient wheat,3,16,0_1_2_,"def is_sorted(stuff) :
","	for i in range(1, len(stuff)) :
","		if stuff [i - 1] > stuff [i] :
",,,,,,
Clone319.py,No wheat,0,63,,,,,,,,,,
Clone867.py,Has necessary and sufficient wheat,5,263,0_1_2_4_7_,"def previous_quarter(date) :
","	date = DT.datetime(date.year, date.month, date.day)
","	rr = rrule.rrule(
","	bymonth = (3, 6, 9, 12),
","	result = rr.before(date, inc = False)
",,,,
Clone836.py,No wheat,0,255,,,,,,,,,,
Clone976.py,No wheat,0,63,,,,,,,,,,
Clone457.py,Has necessary and sufficient wheat,5,62,1_2_3_4_5_,"	while True :
","		next_action = self.queue.get()
","		success = next_action(* self.args, ** self.kwargs)
","		if not success :
","			self.add_task(next_action)
",,,,
Clone686.py,No wheat,0,63,,,,,,,,,,
Clone797.py,No wheat,0,255,,,,,,,,,,
Clone546.py,No wheat,0,127,,,,,,,,,,
Clone913.py,No wheat,0,7,,,,,,,,,,
Clone581.py,No wheat,0,63,,,,,,,,,,
Clone750.py,No wheat,0,31,,,,,,,,,,
Clone572.py,No wheat,0,31,,,,,,,,,,
Clone523.py,No wheat,0,127,,,,,,,,,,
Clone463.py,No wheat,0,1023,,,,,,,,,,
Clone480.py,Has necessary and sufficient wheat,1,1,0_,"def is_valid_hostname(hostname) :
",,,,,,,,
Clone787.py,No wheat,0,31,,,,,,,,,,
Clone696.py,No wheat,0,31,,,,,,,,,,
Clone995.py,No wheat,0,1023,,,,,,,,,,
Clone447.py,No wheat,0,63,,,,,,,,,,
Clone966.py,Has necessary and sufficient wheat,3,25,0_1_5_,"def read_logfile(master_log) :
","	last_line_holder = []
","	print (last_line_holder [- 1])
",,,,,,
Clone877.py,Has necessary and sufficient wheat,7,885,0_1_3_4_5_6_9_,"def sublist(a, b) :
","	seq = iter(b)
","		for x in a :
","			while next(seq) ! = x : pass
","		else :
","			return True
","	return False
",,
Clone309.py,Has necessary and sufficient wheat,3,71,1_5_7_,"	mkl = cls.__class__
","			setattr(spec, n, v)
","	cls.__class__ = spec
",,,,,,
Clone218.py,No wheat,0,31,,,,,,,,,,
Clone269.py,No wheat,0,31,,,,,,,,,,
Clone585.py,No wheat,0,127,,,,,,,,,,
Clone754.py,No wheat,0,63,,,,,,,,,,
Clone806.py,No wheat,0,1023,,,,,,,,,,
Clone705.py,No wheat,0,127,,,,,,,,,,
Clone576.py,No wheat,0,31,,,,,,,,,,
Clone731.py,No wheat,0,511,,,,,,,,,,
Clone671.py,No wheat,0,511,,,,,,,,,,
Clone972.py,Has necessary and sufficient wheat,4,30,1_2_3_4_,"	base = 1
","	for i in range(n, 0, - 1) :
","		base = base * i
","	print base
",,,,,
Clone402.py,No wheat,0,255,,,,,,,,,,
Clone793.py,No wheat,0,63,,,,,,,,,,
Clone542.py,Has necessary and sufficient wheat,2,6,0_1_,"def touch(fname) :
","	if os.path.exists(fname) :
",,,,,,,
Clone453.py,No wheat,0,63,,,,,,,,,,
Clone981.py,No wheat,0,31,,,,,,,,,,
Clone513.py,No wheat,0,127,,,,,,,,,,
Clone692.py,Has necessary and sufficient wheat,3,19,0_2_3_,"def censored(sentence, bad_words = EXCLUDED_WORDS) :
","		for word in bad_words :
","			sentence = sentence.replace(word, '*' * len(word))
",,,,,,
Clone880.py,No wheat,0,127,,,,,,,,,,
Clone630.py,No wheat,0,127,,,,,,,,,,
Clone873.py,No wheat,0,255,,,,,,,,,,
Clone962.py,No wheat,0,31,,,,,,,,,,
Clone822.py,Has necessary and sufficient wheat,3,33,0_1_6_,"def date_hook(json_dict) :
","	for (key, value) in json_dict.items() :
","	return json_dict
",,,,,,
Clone721.py,No wheat,0,1023,,,,,,,,,,
Clone655.py,No wheat,0,63,,,,,,,,,,
Clone847.py,No wheat,0,63,,,,,,,,,,
Clone595.py,No wheat,0,31,,,,,,,,,,
Clone339.py,No wheat,0,255,,,,,,,,,,
Clone368.py,No wheat,0,255,,,,,,,,,,
Clone228.py,No wheat,0,31,,,,,,,,,,
Clone584.py,No wheat,0,31,,,,,,,,,,
Clone755.py,No wheat,0,63,,,,,,,,,,
Clone704.py,No wheat,0,127,,,,,,,,,,
Clone807.py,No wheat,0,63,,,,,,,,,,
Clone98.py,Has necessary and sufficient wheat,7,466,0_1_2_3_4_5_6_,"def matcher(x) :
","	l = [item for item in physical if item.lower() in x.lower()]
","	length = len(l)
","	if length == 0 :
","		return 'other'
","	elif length == 1 :
","		return l [0]
",,
Clone526.py,No wheat,0,511,,,,,,,,,,
Clone577.py,No wheat,0,31,,,,,,,,,,
Clone730.py,No wheat,0,31,,,,,,,,,,
Clone973.py,No wheat,0,31,,,,,,,,,,
Clone670.py,No wheat,0,127,,,,,,,,,,
Clone922.py,Has necessary and sufficient wheat,7,500,1_3_4_5_6_7_8_,"	self.tend = self.get_time()
","		if len(self.tstart) > 0 :
","			self.elapsed = self.tend - self.tstart.pop()
","		else :
","			self.elapsed = None
","	else :
","		self.elapsed = self.tend - self.tstart
",,
Clone621.py,No wheat,0,127,,,,,,,,,,
Clone792.py,Has necessary and sufficient wheat,4,70,0_1_3_6_,"def print_table(data, cols, wide) :
","	n, r = divmod(len(data), cols)
","	line = '\n'.join(pat * cols for _ in range(n))
","	print (last_line.format(* data [n * cols :]))
",,,,,
Clone403.py,No wheat,0,63,,,,,,,,,,
Clone452.py,No wheat,0,63,,,,,,,,,,
Clone442.py,Has necessary and sufficient wheat,7,251,0_1_2_4_5_6_7_,"def almostIncreasingSequence(sequence) :
","	t = 0
","	for i in range(len(sequence)) :
","		del temp [i]
","		if temp == sorted(temp) and not (any(i == j for i, j in zip(sorted(temp), sorted(temp) [1 :]))) :
","			t += 1
","	return t > 0
",,
Clone413.py,No wheat,0,31,,,,,,,,,,
Clone932.py,No wheat,0,31,,,,,,,,,,
Clone631.py,No wheat,0,127,,,,,,,,,,
Clone771.py,No wheat,0,127,,,,,,,,,,
Clone720.py,Has necessary and sufficient wheat,6,244,1_2_4_5_6_7_,"	k = ''
","	while True :
","		if c is None :
","			break
","		k += c
","	return k if k else False
",,,
Clone823.py,No wheat,0,255,,,,,,,,,,
Clone88.py,Has necessary and sufficient wheat,6,228,0_1_2_5_6_7_,"def default(self, v) :
","	types = {
","	'ObjectId' : lambda v : str(v),
","	if vtype in types :
","		return types [type(v).__name__](v)
","	else :
",,,
Clone714.py,No wheat,0,31,,,,,,,,,,
Clone817.py,Has necessary and sufficient wheat,6,122,0_1_2_3_5_6_,"def get_value(d, ks) :
","	for k in ks :
","		try :
","			d = d [k]
","			return 0
","	return d
",,,
Clone654.py,No wheat,0,63,,,,,,,,,,
Clone594.py,No wheat,0,31,,,,,,,,,,
Clone605.py,No wheat,0,31,,,,,,,,,,
Clone198.py,No wheat,0,63,,,,,,,,,,
Clone318.py,No wheat,0,255,,,,,,,,,,
Clone837.py,No wheat,0,15,,,,,,,,,,
Clone674.py,Has necessary and sufficient wheat,7,926,0_3_4_5_6_7_9_,"def char_first_index(s, c) :
","	if s [0] == c :
","		return 0
","	answer = char_first_index(s [1 :], c)
","	if answer is not None :
","		return 1 + answer
","		return answer
",,
Clone977.py,No wheat,0,63,,,,,,,,,,
Clone407.py,No wheat,0,63,,,,,,,,,,
Clone796.py,Has necessary and sufficient wheat,5,258,0_1_2_3_6_,"def decrypt(key, encoded) :
","	padded_key = key.ljust(KEY_SIZE, '\0')
","	ciphertext = base64.b64decode(encoded)
","	r = rijndael.rijndael(padded_key, BLOCK_SIZE)
","		padded_text += r.decrypt(ciphertext [start : start + BLOCK_SIZE])
",,,,
Clone580.py,No wheat,0,63,,,,,,,,,,
Clone912.py,No wheat,0,255,,,,,,,,,,
Clone522.py,No wheat,0,255,,,,,,,,,,
Clone842.py,No wheat,0,127,,,,,,,,,,
Clone741.py,No wheat,0,31,,,,,,,,,,
Clone902.py,No wheat,0,31,,,,,,,,,,
Clone813.py,No wheat,0,31,,,,,,,,,,
Clone710.py,No wheat,0,127,,,,,,,,,,
Clone827.py,Has necessary and sufficient wheat,3,65,0_2_4_,"def run(self) :
","	while (self.process.poll() is None and self.timeout > 0) :
","		self.timeout -= 1
",,,,,,
Clone724.py,No wheat,0,31,,,,,,,,,,
Clone775.py,No wheat,0,255,,,,,,,,,,
Clone308.py,No wheat,0,127,,,,,,,,,,
Clone219.py,No wheat,0,63,,,,,,,,,,